# name: CI

# on: [pull_request, push]

# jobs:

#   pipeline:
#     runs-on: ubuntu-latest
#     steps:
#       - name: extract branch name on push event
#         if: github.event_name != 'pull_request'
#         shell: bash
#         run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV; echo "HASH=${GITHUB_SHA::6}" >> $GITHUB_ENV; uname -m

#       - name: extract branch name on PR event
#         if: github.event_name == 'pull_request'
#         shell: bash
#         run: echo "BRANCH=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV; echo "HASH=${GITHUB_SHA::6}" >> $GITHUB_ENV;

#       - name: Get branch name
#         run: echo 'The branch name is' ${{ env.BRANCH }}; echo 'HASH is' ${{ env.HASH }}

#       - name: checkout repo
#         uses: actions/checkout@v3

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@master
#         with:
#           platforms: all
      
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
      
#       - name: Build
#         uses: docker/build-push-action@v3
#         with:
#           context: ./dockerfile
#           file: ./dockerfile/dockerfile
#           push: true
#           platforms: linux/amd64,linux/arm64,linux/ppc64le
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/cision:${{ env.BRANCH }}-${{ env.HASH }}

#       # - name: Scan for vulnerabilities
#       #   run: docker scan --login --token PROVIDER_AUTH_TOKEN;docker scan -f ./dockerfile/dockerfile ${{ secrets.DOCKERHUB_USERNAME }}/cision:${{ env.BRANCH }}-${{ env.HASH }}

#       # - name: Run Trivy vulnerability scanner
#       #   uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
#       #   with:
#       #     image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/cision:${{ env.BRANCH }}-${{ env.HASH }}
#       #     format: 'template'
#       #     template: '@/contrib/sarif.tpl'
#       #     output: 'trivy-results.sarif'
#       #     severity: 'CRITICAL,HIGH'

#       # - name: Upload Trivy scan results to GitHub Security tab
#       #   uses: github/codeql-action/upload-sarif@v2
#       #   with:
#       #     sarif_file: 'trivy-results.sarif'